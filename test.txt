-- BY Alya ROB 🌸 - نظام Silent AIM الخارق للتطوير
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- 1. نظام الإعدادات المتقدم
local AdvancedConfig = {
    Active = true,
    FOV = 90, -- زاوية الرؤية بالدرجات
    AutoLock = true,
    TargetPart = "Head", -- الجزء المستهدف
    Prediction = {
        Enabled = true,
        VelocityScale = 0.3,
        PingCompensation = true
    },
    Humanizer = {
        Randomness = 0.02, -- عشوائية طبيعية
        Smoothing = 0.7 -- سلاسة الحركة
    }
}

-- 2. نظام التتبع المتقدم
local TargetSystem = {
    CurrentTarget = nil,
    TargetLock = false,
    LastPosition = nil,
    Velocity = Vector3.new(0, 0, 0)
}

-- 3. خوارزمية البحث عن الأهداف (محدثة)
local function FindOptimalTarget()
    local bestTarget = nil
    local smallestAngle = math.rad(AdvancedConfig.FOV)
    local cameraPos = Camera.CFrame.Position
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        
        local character = player.Character
        if not character then continue end
        
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if not humanoid or humanoid.Health <= 0 then continue end
        
        local targetPart = character:FindFirstChild(AdvancedConfig.TargetPart)
        if not targetPart then continue end
        
        -- حساب الزاوية بدقة عالية
        local direction = (targetPart.Position - cameraPos).Unit
        local angle = math.acos(Camera.CFrame.LookVector:Dot(direction))
        
        if angle < smallestAngle then
            -- حساب السرعة للتنبؤ
            local velocity = Vector3.new(0, 0, 0)
            if TargetSystem.LastPosition then
                velocity = (targetPart.Position - TargetSystem.LastPosition) / RunService.Heartbeat:Wait()
            end
            
            smallestAngle = angle
            bestTarget = {
                Player = player,
                Part = targetPart,
                Position = targetPart.Position,
                Velocity = velocity
            }
        end
    end
    
    return bestTarget
end

-- 4. خوارزمية التنبؤ المحسنة
local function CalculatePrecisePrediction(target)
    if not AdvancedConfig.Prediction.Enabled then
        return target.Position
    end
    
    local predictedPosition = target.Position
    
    -- حساب تأثير السرعة
    predictedPosition = predictedPosition + (target.Velocity * AdvancedConfig.Prediction.VelocityScale)
    
    -- تعويض Ping إذا كان مفعلاً
    if AdvancedConfig.Prediction.PingCompensation then
        local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
        predictedPosition = predictedPosition + (target.Velocity * (ping/2000))
    end
    
    return predictedPosition
end

-- 5. نظام التصويب الخارق (محدث)
function GetPerfectAimDirection(origin)
    if not AdvancedConfig.Active then
        return Camera.CFrame.LookVector
    end
    
    -- البحث عن الهدف الأمثل
    TargetSystem.CurrentTarget = FindOptimalTarget()
    
    if not TargetSystem.CurrentTarget then
        return Camera.CFrame.LookVector
    end
    
    -- حساب الموضع الدقيق مع التنبؤ
    local precisePosition = CalculatePrecisePrediction(TargetSystem.CurrentTarget)
    
    -- تطبيق العشوائية البشرية
    if AdvancedConfig.Humanizer.Randomness > 0 then
        local offset = Vector3.new(
            (math.random() * 2 - 1) * AdvancedConfig.Humanizer.Randomness,
            (math.random() * 2 - 1) * AdvancedConfig.Humanizer.Randomness,
            (math.random() * 2 - 1) * AdvancedConfig.Humanizer.Randomness
        )
        precisePosition = precisePosition + offset
    end
    
    -- حساب الاتجاه الدقيق
    local perfectDirection = (precisePosition - origin).Unit
    
    -- تطبيق السلاسة
    if AdvancedConfig.Humanizer.Smoothing > 0 then
        perfectDirection = Camera.CFrame.LookVector:Lerp(perfectDirection, AdvancedConfig.Humanizer.Smoothing)
    end
    
    return perfectDirection
end

-- 6. نظام المحاكاة (للتطوير فقط)
local function SimulateBullet(origin)
    local direction = GetPerfectAimDirection(origin)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    
    local raycastResult = workspace:Raycast(origin, direction * 1000, raycastParams)
    if raycastResult then
        -- كود تأثير الرصاصة هنا
        print("🎯 أصبت الهدف بدقة عالية!")
    end
end

-- 7. اختبار النظام (للتطوير)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.E then
        local character = LocalPlayer.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                SimulateBullet(humanoidRootPart.Position)
            end
        end
    end
end)

-- 8. نظام الرؤية (FOV Circle)
local FOVCircle = Drawing.new("Circle")
FOVCircle.Visible = true
FOVCircle.Color = Color3.new(1, 0, 0)
FOVCircle.Thickness = 1
FOVCircle.NumSides = 64
FOVCircle.Filled = false

RunService.RenderStepped:Connect(function()
    FOVCircle.Radius = AdvancedConfig.FOV * 3
    FOVCircle.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    FOVCircle.Visible = AdvancedConfig.Active
end)

print("🔥 تم تحميل نظام AIM الخارق بنجاح!")
print("🎯 اضغط E لمحاكاة إطلاق النار")
